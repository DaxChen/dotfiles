priority 0

# from vim-snippets/snippets/javascript/javascript.es6.snippets

snippet const
const ${1} = ${0}
endsnippet

snippet let
let ${1} = ${0}
endsnippet

snippet im "import xyz from 'xyz'"
import ${1} from '${2:$1}'
endsnippet

snippet imas "import * as xyz from 'xyz'"
import * as ${1} from '${2:$1}'
endsnippet

snippet imm "import { member } from 'xyz'"
import { ${1} } from '${2}'
endsnippet

# from vim-snippets/snippets/javascript/javascript.snippets

snippet for "for (...) {...} (counting up)" b
for (let ${1:i} = 0, ${2:len} = ${3:Things.length}; $1 < $2; ++$1) {
	${VISUAL}$0
}
endsnippet

snippet ford "for (...) {...} (counting down, faster)" b
for (let ${2:i} = ${1:Things.length} - 1; $2 >= 0; --$2) {
	${VISUAL}$0
}
endsnippet

snippet fun "function (fun)" w
function ${1:function_name} (${2:argument}) {
	${VISUAL}$0
}
endsnippet

snippet fi "for prop in obj using hasOwnProperty" b
for (let ${1:prop} in ${2:obj}){
	if ($2.hasOwnProperty($1)) {
		${VISUAL}$0
	}
}
endsnippet

# Snippets for Console Debug Output

snippet ca "console.assert" b
console.assert(${1:assertion}, ${2:'${3:message}'})
endsnippet

snippet cclear "console.clear" b
console.clear()
endsnippet

snippet cdir "console.dir" b
console.dir(${1:object})
endsnippet

snippet cdirx "console.dirxml" b
console.dirxml(${1:object})
endsnippet

snippet ce "console.error" b
console.error(${0})
endsnippet

snippet cgroup "console.group" b
console.group('${1:label}')
${VISUAL}$0
console.groupEnd()
endsnippet

snippet cgroupc "console.groupCollapsed" b
console.groupCollapsed('${1:label}')
${VISUAL}$0
console.groupEnd()
endsnippet

snippet ci "console.info" b
console.info(${1:'${2:value}'})
endsnippet

snippet cl "console.log" b
console.log(${0})
endsnippet

snippet cd "console.debug" b
console.debug(${1:'${2:value}'})
endsnippet

snippet cprof "console.profile" b
console.profile('${1:label}')
${VISUAL}$0
console.profileEnd()
endsnippet

snippet ctable "console.table" b
console.table(${1:'${2:value}'})
endsnippet

snippet ctime "console.time" b
console.time('${1:label}')
${VISUAL}$0
console.timeEnd('$1')
endsnippet

snippet ctimestamp "console.timeStamp" b
console.timeStamp('${1:label}')
endsnippet

snippet ctrace "console.trace" b
console.trace()
endsnippet

snippet cw "console.warn" b
console.warn(${1:'${2:value}'})
endsnippet

# vim:ft=snippets:
